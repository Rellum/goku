// Code generated by protoc-gen-go. DO NOT EDIT.
// source: goku.proto

package gokupb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	reflexpb "github.com/luno/reflex/reflexpb"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_34ec642ad405eef9, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type KV struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Version              int64    `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	CreatedRef           int64    `protobuf:"varint,4,opt,name=created_ref,json=createdRef,proto3" json:"created_ref,omitempty"`
	UpdatedRef           int64    `protobuf:"varint,5,opt,name=updated_ref,json=updatedRef,proto3" json:"updated_ref,omitempty"`
	DeletedRef           int64    `protobuf:"varint,6,opt,name=deleted_ref,json=deletedRef,proto3" json:"deleted_ref,omitempty"`
	LeaseId              int64    `protobuf:"varint,7,opt,name=lease_id,json=leaseId,proto3" json:"lease_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KV) Reset()         { *m = KV{} }
func (m *KV) String() string { return proto.CompactTextString(m) }
func (*KV) ProtoMessage()    {}
func (*KV) Descriptor() ([]byte, []int) {
	return fileDescriptor_34ec642ad405eef9, []int{1}
}

func (m *KV) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KV.Unmarshal(m, b)
}
func (m *KV) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KV.Marshal(b, m, deterministic)
}
func (m *KV) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KV.Merge(m, src)
}
func (m *KV) XXX_Size() int {
	return xxx_messageInfo_KV.Size(m)
}
func (m *KV) XXX_DiscardUnknown() {
	xxx_messageInfo_KV.DiscardUnknown(m)
}

var xxx_messageInfo_KV proto.InternalMessageInfo

func (m *KV) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *KV) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *KV) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *KV) GetCreatedRef() int64 {
	if m != nil {
		return m.CreatedRef
	}
	return 0
}

func (m *KV) GetUpdatedRef() int64 {
	if m != nil {
		return m.UpdatedRef
	}
	return 0
}

func (m *KV) GetDeletedRef() int64 {
	if m != nil {
		return m.DeletedRef
	}
	return 0
}

func (m *KV) GetLeaseId() int64 {
	if m != nil {
		return m.LeaseId
	}
	return 0
}

type GetRequest struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_34ec642ad405eef9, []int{2}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type ListRequest struct {
	Prefix               string   `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_34ec642ad405eef9, []int{3}
}

func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

func (m *ListRequest) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

type ListResponse struct {
	Kvs                  []*KV    `protobuf:"bytes,1,rep,name=kvs,proto3" json:"kvs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListResponse) Reset()         { *m = ListResponse{} }
func (m *ListResponse) String() string { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()    {}
func (*ListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_34ec642ad405eef9, []int{4}
}

func (m *ListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResponse.Unmarshal(m, b)
}
func (m *ListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResponse.Marshal(b, m, deterministic)
}
func (m *ListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResponse.Merge(m, src)
}
func (m *ListResponse) XXX_Size() int {
	return xxx_messageInfo_ListResponse.Size(m)
}
func (m *ListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListResponse proto.InternalMessageInfo

func (m *ListResponse) GetKvs() []*KV {
	if m != nil {
		return m.Kvs
	}
	return nil
}

type DeleteRequest struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_34ec642ad405eef9, []int{5}
}

func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(m, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type SetRequest struct {
	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// Options
	ExpiresAt            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	LeaseId              int64                `protobuf:"varint,4,opt,name=lease_id,json=leaseId,proto3" json:"lease_id,omitempty"`
	PrevVersion          int64                `protobuf:"varint,5,opt,name=prev_version,json=prevVersion,proto3" json:"prev_version,omitempty"`
	CreateOnly           bool                 `protobuf:"varint,6,opt,name=create_only,json=createOnly,proto3" json:"create_only,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SetRequest) Reset()         { *m = SetRequest{} }
func (m *SetRequest) String() string { return proto.CompactTextString(m) }
func (*SetRequest) ProtoMessage()    {}
func (*SetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_34ec642ad405eef9, []int{6}
}

func (m *SetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetRequest.Unmarshal(m, b)
}
func (m *SetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetRequest.Marshal(b, m, deterministic)
}
func (m *SetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetRequest.Merge(m, src)
}
func (m *SetRequest) XXX_Size() int {
	return xxx_messageInfo_SetRequest.Size(m)
}
func (m *SetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetRequest proto.InternalMessageInfo

func (m *SetRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *SetRequest) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *SetRequest) GetExpiresAt() *timestamp.Timestamp {
	if m != nil {
		return m.ExpiresAt
	}
	return nil
}

func (m *SetRequest) GetLeaseId() int64 {
	if m != nil {
		return m.LeaseId
	}
	return 0
}

func (m *SetRequest) GetPrevVersion() int64 {
	if m != nil {
		return m.PrevVersion
	}
	return 0
}

func (m *SetRequest) GetCreateOnly() bool {
	if m != nil {
		return m.CreateOnly
	}
	return false
}

type StreamRequest struct {
	Prefix               string                  `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Req                  *reflexpb.StreamRequest `protobuf:"bytes,2,opt,name=req,proto3" json:"req,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *StreamRequest) Reset()         { *m = StreamRequest{} }
func (m *StreamRequest) String() string { return proto.CompactTextString(m) }
func (*StreamRequest) ProtoMessage()    {}
func (*StreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_34ec642ad405eef9, []int{7}
}

func (m *StreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamRequest.Unmarshal(m, b)
}
func (m *StreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamRequest.Marshal(b, m, deterministic)
}
func (m *StreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamRequest.Merge(m, src)
}
func (m *StreamRequest) XXX_Size() int {
	return xxx_messageInfo_StreamRequest.Size(m)
}
func (m *StreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamRequest proto.InternalMessageInfo

func (m *StreamRequest) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

func (m *StreamRequest) GetReq() *reflexpb.StreamRequest {
	if m != nil {
		return m.Req
	}
	return nil
}

type UpdateLeaseRequest struct {
	LeaseId              int64                `protobuf:"varint,1,opt,name=lease_id,json=leaseId,proto3" json:"lease_id,omitempty"`
	ExpiresAt            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *UpdateLeaseRequest) Reset()         { *m = UpdateLeaseRequest{} }
func (m *UpdateLeaseRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateLeaseRequest) ProtoMessage()    {}
func (*UpdateLeaseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_34ec642ad405eef9, []int{8}
}

func (m *UpdateLeaseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateLeaseRequest.Unmarshal(m, b)
}
func (m *UpdateLeaseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateLeaseRequest.Marshal(b, m, deterministic)
}
func (m *UpdateLeaseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateLeaseRequest.Merge(m, src)
}
func (m *UpdateLeaseRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateLeaseRequest.Size(m)
}
func (m *UpdateLeaseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateLeaseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateLeaseRequest proto.InternalMessageInfo

func (m *UpdateLeaseRequest) GetLeaseId() int64 {
	if m != nil {
		return m.LeaseId
	}
	return 0
}

func (m *UpdateLeaseRequest) GetExpiresAt() *timestamp.Timestamp {
	if m != nil {
		return m.ExpiresAt
	}
	return nil
}

type ExpireLeaseRequest struct {
	LeaseId              int64    `protobuf:"varint,1,opt,name=lease_id,json=leaseId,proto3" json:"lease_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExpireLeaseRequest) Reset()         { *m = ExpireLeaseRequest{} }
func (m *ExpireLeaseRequest) String() string { return proto.CompactTextString(m) }
func (*ExpireLeaseRequest) ProtoMessage()    {}
func (*ExpireLeaseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_34ec642ad405eef9, []int{9}
}

func (m *ExpireLeaseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExpireLeaseRequest.Unmarshal(m, b)
}
func (m *ExpireLeaseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExpireLeaseRequest.Marshal(b, m, deterministic)
}
func (m *ExpireLeaseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExpireLeaseRequest.Merge(m, src)
}
func (m *ExpireLeaseRequest) XXX_Size() int {
	return xxx_messageInfo_ExpireLeaseRequest.Size(m)
}
func (m *ExpireLeaseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExpireLeaseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExpireLeaseRequest proto.InternalMessageInfo

func (m *ExpireLeaseRequest) GetLeaseId() int64 {
	if m != nil {
		return m.LeaseId
	}
	return 0
}

func init() {
	proto.RegisterType((*Empty)(nil), "gokupb.Empty")
	proto.RegisterType((*KV)(nil), "gokupb.KV")
	proto.RegisterType((*GetRequest)(nil), "gokupb.GetRequest")
	proto.RegisterType((*ListRequest)(nil), "gokupb.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "gokupb.ListResponse")
	proto.RegisterType((*DeleteRequest)(nil), "gokupb.DeleteRequest")
	proto.RegisterType((*SetRequest)(nil), "gokupb.SetRequest")
	proto.RegisterType((*StreamRequest)(nil), "gokupb.StreamRequest")
	proto.RegisterType((*UpdateLeaseRequest)(nil), "gokupb.UpdateLeaseRequest")
	proto.RegisterType((*ExpireLeaseRequest)(nil), "gokupb.ExpireLeaseRequest")
}

func init() { proto.RegisterFile("goku.proto", fileDescriptor_34ec642ad405eef9) }

var fileDescriptor_34ec642ad405eef9 = []byte{
	// 558 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xad, 0xe3, 0xc4, 0x69, 0xc7, 0x89, 0x40, 0xcb, 0x97, 0xb1, 0x10, 0x4d, 0x2d, 0x21, 0x02,
	0x54, 0x4e, 0x15, 0xb8, 0xd0, 0x1b, 0x12, 0x51, 0x84, 0x5a, 0x09, 0xc9, 0x81, 0x5c, 0x23, 0xa7,
	0x99, 0x04, 0x13, 0xc7, 0xeb, 0xae, 0xd7, 0x51, 0xf2, 0xff, 0x38, 0xf3, 0x3b, 0xf8, 0x19, 0xc8,
	0xbb, 0xde, 0xda, 0xc6, 0x2a, 0xd0, 0x93, 0x77, 0x66, 0xdf, 0xec, 0xcc, 0xbc, 0xf7, 0x0c, 0xb0,
	0xa2, 0xeb, 0xd4, 0x8d, 0x19, 0xe5, 0x94, 0x18, 0xd9, 0x39, 0x9e, 0xdb, 0xa7, 0xab, 0x80, 0x7f,
	0x4b, 0xe7, 0xee, 0x15, 0xdd, 0x0c, 0xc2, 0x34, 0xa2, 0x03, 0x86, 0xcb, 0x10, 0x77, 0xf9, 0x27,
	0x9e, 0xe7, 0x07, 0x59, 0x65, 0x1f, 0xaf, 0x28, 0x5d, 0x85, 0x38, 0x10, 0xd1, 0x3c, 0x5d, 0x0e,
	0x78, 0xb0, 0xc1, 0x84, 0xfb, 0x9b, 0x58, 0x02, 0x9c, 0x36, 0xb4, 0x46, 0x9b, 0x98, 0xef, 0x9d,
	0x1f, 0x1a, 0x34, 0x2e, 0xa6, 0xe4, 0x3e, 0xe8, 0x6b, 0xdc, 0x5b, 0x5a, 0x4f, 0xeb, 0x1f, 0x79,
	0xd9, 0x91, 0x3c, 0x84, 0xd6, 0xd6, 0x0f, 0x53, 0xb4, 0x1a, 0x3d, 0xad, 0xdf, 0xf1, 0x64, 0x40,
	0x2c, 0x68, 0x6f, 0x91, 0x25, 0x01, 0x8d, 0x2c, 0xbd, 0xa7, 0xf5, 0x75, 0x4f, 0x85, 0xe4, 0x18,
	0xcc, 0x2b, 0x86, 0x3e, 0xc7, 0xc5, 0x8c, 0xe1, 0xd2, 0x6a, 0x8a, 0x5b, 0xc8, 0x53, 0x1e, 0x2e,
	0x33, 0x40, 0x1a, 0x2f, 0x6e, 0x00, 0x2d, 0x09, 0xc8, 0x53, 0x39, 0x60, 0x81, 0x21, 0x2a, 0x80,
	0x21, 0x01, 0x79, 0x2a, 0x03, 0x3c, 0x85, 0xc3, 0x10, 0xfd, 0x04, 0x67, 0xc1, 0xc2, 0x6a, 0xcb,
	0xee, 0x22, 0xfe, 0xb4, 0x70, 0x9e, 0x03, 0x8c, 0x91, 0x7b, 0x78, 0x9d, 0x62, 0xc2, 0xeb, 0xdb,
	0x38, 0x2f, 0xc0, 0xbc, 0x0c, 0x92, 0x1b, 0xc0, 0x63, 0x30, 0x62, 0x86, 0xcb, 0x60, 0x97, 0x63,
	0xf2, 0xc8, 0x39, 0x85, 0x8e, 0x84, 0x25, 0x31, 0x8d, 0x12, 0x24, 0xcf, 0x40, 0x5f, 0x6f, 0x13,
	0x4b, 0xeb, 0xe9, 0x7d, 0x73, 0x08, 0xae, 0xd4, 0xc2, 0xbd, 0x98, 0x7a, 0x59, 0xda, 0x39, 0x81,
	0xee, 0x47, 0x31, 0xdd, 0xed, 0x7d, 0x7f, 0x6a, 0x00, 0x93, 0xbf, 0x0c, 0x76, 0x0b, 0xcd, 0xef,
	0x01, 0x70, 0x17, 0x07, 0x0c, 0x93, 0x99, 0xcf, 0x05, 0xd3, 0xe6, 0xd0, 0x76, 0xa5, 0xa8, 0xae,
	0x12, 0xd5, 0xfd, 0xa2, 0x44, 0xf5, 0x8e, 0x72, 0xf4, 0x07, 0x5e, 0x21, 0xa9, 0x59, 0x21, 0x89,
	0x9c, 0x40, 0x27, 0x66, 0xb8, 0x9d, 0x29, 0x05, 0xa5, 0x04, 0x66, 0x96, 0x9b, 0xfe, 0xa9, 0xe2,
	0x8c, 0x46, 0xe1, 0x5e, 0x68, 0x70, 0xa8, 0x54, 0xfc, 0x1c, 0x85, 0x7b, 0xc7, 0x83, 0xee, 0x84,
	0x33, 0xf4, 0x37, 0xff, 0xa0, 0x92, 0xbc, 0x02, 0x9d, 0xe1, 0xb5, 0x58, 0xcb, 0x1c, 0x3e, 0x71,
	0x95, 0x4f, 0xdd, 0x4a, 0xb5, 0x97, 0x61, 0x9c, 0xef, 0x40, 0xbe, 0x0a, 0x1b, 0x5c, 0x66, 0x83,
	0xaa, 0x87, 0xcb, 0x8b, 0x68, 0xd5, 0x45, 0xaa, 0xf4, 0x34, 0xee, 0x40, 0x8f, 0x33, 0x00, 0x32,
	0x12, 0xc1, 0x7f, 0xf6, 0x1a, 0xfe, 0x6a, 0x40, 0x73, 0x4c, 0xd7, 0x29, 0x79, 0x09, 0xfa, 0x18,
	0x39, 0x21, 0xca, 0x05, 0x85, 0xdf, 0xec, 0x92, 0x33, 0x9c, 0x03, 0xf2, 0x06, 0x9a, 0x99, 0x89,
	0xc8, 0x03, 0x95, 0x2d, 0x39, 0xaf, 0x0a, 0x3d, 0xd3, 0xc8, 0x6b, 0xd0, 0x27, 0xe5, 0x57, 0x0b,
	0xb3, 0xd8, 0x5d, 0x95, 0x93, 0x7f, 0xea, 0x01, 0x39, 0x03, 0x43, 0xfa, 0x8d, 0x3c, 0x52, 0x57,
	0x15, 0xff, 0xd5, 0x2b, 0xde, 0x81, 0x21, 0xf9, 0x2e, 0x2a, 0x2a, 0xfc, 0xdb, 0xf7, 0x0a, 0x61,
	0x46, 0x5b, 0x8c, 0xb8, 0x98, 0xe9, 0x1c, 0xcc, 0x92, 0x1e, 0xc4, 0x56, 0xa5, 0x75, 0x91, 0xea,
	0x1d, 0xcf, 0xc1, 0x2c, 0xf1, 0x5b, 0xd4, 0xd6, 0x49, 0xaf, 0xd5, 0xce, 0x0d, 0x21, 0xdd, 0xdb,
	0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x9e, 0xb8, 0xd0, 0x59, 0x00, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GokuClient is the client API for Goku service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GokuClient interface {
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*KV, error)
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (Goku_ListClient, error)
	Set(ctx context.Context, in *SetRequest, opts ...grpc.CallOption) (*Empty, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*Empty, error)
	Stream(ctx context.Context, in *StreamRequest, opts ...grpc.CallOption) (Goku_StreamClient, error)
	UpdateLease(ctx context.Context, in *UpdateLeaseRequest, opts ...grpc.CallOption) (*Empty, error)
	ExpireLease(ctx context.Context, in *ExpireLeaseRequest, opts ...grpc.CallOption) (*Empty, error)
}

type gokuClient struct {
	cc *grpc.ClientConn
}

func NewGokuClient(cc *grpc.ClientConn) GokuClient {
	return &gokuClient{cc}
}

func (c *gokuClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*KV, error) {
	out := new(KV)
	err := c.cc.Invoke(ctx, "/gokupb.Goku/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gokuClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (Goku_ListClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Goku_serviceDesc.Streams[0], "/gokupb.Goku/List", opts...)
	if err != nil {
		return nil, err
	}
	x := &gokuListClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Goku_ListClient interface {
	Recv() (*KV, error)
	grpc.ClientStream
}

type gokuListClient struct {
	grpc.ClientStream
}

func (x *gokuListClient) Recv() (*KV, error) {
	m := new(KV)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *gokuClient) Set(ctx context.Context, in *SetRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/gokupb.Goku/Set", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gokuClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/gokupb.Goku/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gokuClient) Stream(ctx context.Context, in *StreamRequest, opts ...grpc.CallOption) (Goku_StreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Goku_serviceDesc.Streams[1], "/gokupb.Goku/Stream", opts...)
	if err != nil {
		return nil, err
	}
	x := &gokuStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Goku_StreamClient interface {
	Recv() (*reflexpb.Event, error)
	grpc.ClientStream
}

type gokuStreamClient struct {
	grpc.ClientStream
}

func (x *gokuStreamClient) Recv() (*reflexpb.Event, error) {
	m := new(reflexpb.Event)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *gokuClient) UpdateLease(ctx context.Context, in *UpdateLeaseRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/gokupb.Goku/UpdateLease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gokuClient) ExpireLease(ctx context.Context, in *ExpireLeaseRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/gokupb.Goku/ExpireLease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GokuServer is the server API for Goku service.
type GokuServer interface {
	Get(context.Context, *GetRequest) (*KV, error)
	List(*ListRequest, Goku_ListServer) error
	Set(context.Context, *SetRequest) (*Empty, error)
	Delete(context.Context, *DeleteRequest) (*Empty, error)
	Stream(*StreamRequest, Goku_StreamServer) error
	UpdateLease(context.Context, *UpdateLeaseRequest) (*Empty, error)
	ExpireLease(context.Context, *ExpireLeaseRequest) (*Empty, error)
}

// UnimplementedGokuServer can be embedded to have forward compatible implementations.
type UnimplementedGokuServer struct {
}

func (*UnimplementedGokuServer) Get(ctx context.Context, req *GetRequest) (*KV, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedGokuServer) List(req *ListRequest, srv Goku_ListServer) error {
	return status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedGokuServer) Set(ctx context.Context, req *SetRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Set not implemented")
}
func (*UnimplementedGokuServer) Delete(ctx context.Context, req *DeleteRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedGokuServer) Stream(req *StreamRequest, srv Goku_StreamServer) error {
	return status.Errorf(codes.Unimplemented, "method Stream not implemented")
}
func (*UnimplementedGokuServer) UpdateLease(ctx context.Context, req *UpdateLeaseRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateLease not implemented")
}
func (*UnimplementedGokuServer) ExpireLease(ctx context.Context, req *ExpireLeaseRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExpireLease not implemented")
}

func RegisterGokuServer(s *grpc.Server, srv GokuServer) {
	s.RegisterService(&_Goku_serviceDesc, srv)
}

func _Goku_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GokuServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gokupb.Goku/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GokuServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Goku_List_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GokuServer).List(m, &gokuListServer{stream})
}

type Goku_ListServer interface {
	Send(*KV) error
	grpc.ServerStream
}

type gokuListServer struct {
	grpc.ServerStream
}

func (x *gokuListServer) Send(m *KV) error {
	return x.ServerStream.SendMsg(m)
}

func _Goku_Set_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GokuServer).Set(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gokupb.Goku/Set",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GokuServer).Set(ctx, req.(*SetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Goku_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GokuServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gokupb.Goku/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GokuServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Goku_Stream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StreamRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GokuServer).Stream(m, &gokuStreamServer{stream})
}

type Goku_StreamServer interface {
	Send(*reflexpb.Event) error
	grpc.ServerStream
}

type gokuStreamServer struct {
	grpc.ServerStream
}

func (x *gokuStreamServer) Send(m *reflexpb.Event) error {
	return x.ServerStream.SendMsg(m)
}

func _Goku_UpdateLease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateLeaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GokuServer).UpdateLease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gokupb.Goku/UpdateLease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GokuServer).UpdateLease(ctx, req.(*UpdateLeaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Goku_ExpireLease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExpireLeaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GokuServer).ExpireLease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gokupb.Goku/ExpireLease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GokuServer).ExpireLease(ctx, req.(*ExpireLeaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Goku_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gokupb.Goku",
	HandlerType: (*GokuServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _Goku_Get_Handler,
		},
		{
			MethodName: "Set",
			Handler:    _Goku_Set_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Goku_Delete_Handler,
		},
		{
			MethodName: "UpdateLease",
			Handler:    _Goku_UpdateLease_Handler,
		},
		{
			MethodName: "ExpireLease",
			Handler:    _Goku_ExpireLease_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "List",
			Handler:       _Goku_List_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Stream",
			Handler:       _Goku_Stream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "goku.proto",
}
